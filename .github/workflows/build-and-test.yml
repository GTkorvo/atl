name: GitHub Actions

on: 
  push: 
    branches: 
    - master 
  pull_request: 
    branches: 
    - master 

jobs:
  linux:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      GH_YML_JOBNAME: ${{ matrix.jobname }}
      GH_YML_OS: Linux
      CC: ${{ matrix.cc }}
      CTEST: ${{ matrix.ctest }}

    strategy:
      fail-fast: false
      matrix:
        jobname: [
          centos8-gcc,
          centos8-clang,
          centos7-gcc,
          centos7-clang,
          centos7-pgi,
          ubuntu2004-gcc,
          ubuntu2004-clang,
          ubuntu2004-pgi,
          ubuntu1804-gcc,
          ubuntu1804-clang ]
        include:
        - jobname: centos8-gcc
          container: centos:8
          cc: gcc
        - jobname: centos8-clang
          container: centos:8
          cc: clang
        - jobname: centos7-gcc
          container: centos:7
          cc: gcc
          ctest: ctest3
        - jobname: centos7-clang
          container: centos:7
          cc: clang
          ctest: ctest3
        - jobname: centos7-pgi
          container: nvcr.io/nvidia/nvhpc:20.9-devel-centos7
          cc: pgcc
          ctest: ctest3
        - jobname: ubuntu1804-gcc
          container: ubuntu:18.04
          cc: gcc
        - jobname: ubuntu1804-clang
          container: ubuntu:18.04
          cc: clang
        - jobname: ubuntu2004-pgi
          container: nvcr.io/nvidia/nvhpc:20.9-devel-ubuntu20.04
          cc: pgcc
        - jobname: ubuntu1604-gcc
          container: ubuntu:16.04
          cc: gcc
        - jobname: ubuntu1604-clang
          container: ubuntu:16.04
          cc: clang

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Setup
      run: scripts/ci/gh-actions/run.sh setup
    - name: Configure
      run: scripts/ci/gh-actions/run.sh configure
    - name: Build
      run: scripts/ci/gh-actions/run.sh build
    - name: Test
      run: scripts/ci/gh-actions/run.sh test
